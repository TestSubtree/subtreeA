name: PR Workflow for main

on:
  pull_request:
    branches:
      - main # PR 대상 브랜치가 main일 때만 트리거
  workflow_dispatch: # 수동으로 워크플로우를 실행할 수 있도록 설정

jobs:
  check_subtree_changes:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository A
      - name: Checkout repository A
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        continue-on-error: false

      # 2. Remove GitHub Actions Extraheader
      - name: Remove GitHub Actions Extraheader
        run: |
          git config --unset-all http.https://github.com/.extraheader
        shell: bash

      # 3. Clone repository B (subtreeC) using PAT
      - name: Clone repository B (subtreeC)
        run: |
          echo "Cloning repository B (subtreeC)..."
          git clone --branch main --depth 1 https://x-access-token:${{ secrets.TT }}@github.com/TestSubtree/subtreeC.git repository_database || { echo "Error: Failed to clone repository B."; exit 1; }

      # 4. Remove .git folder from repository B
      - name: Remove .git folder from repository B
        run: |
          echo "Removing .git folder from repository B..."
          rm -rf repository_database/.git || { echo "Error: Failed to remove .git folder from repository B."; exit 1; }

      # 5. Compare subtree changes using git diff with enhanced error handling
      - name: Check subtree changes
        id: check_changes
        run: |
          echo "Checking for subtree changes..."
          set +e
          git --no-pager diff --exit-code --no-index C/ repository_database/ > diff_output.txt
          exit_code=$?
          if [ $exit_code -eq 0 ]; then
            echo "no_changes=true" >> $GITHUB_ENV
          elif [ $exit_code -eq 1 ]; then
            echo "no_changes=false" >> $GITHUB_ENV
          else
            echo "Error: git diff command failed with exit code $exit_code"
            exit 1
          fi
        shell: bash

      # 6. Print message and exit if no changes
      - name: No changes in subtree
        if: env.no_changes == 'true'
        run: echo "수정사항이 없습니다. 워크플로우를 종료합니다."

      # 7. Show detailed changes if they exist
      - name: Subtree changes details
        if: env.no_changes == 'false'
        run: |
          echo "다음과 같은 상세한 수정사항이 있습니다:"
          git --no-pager diff --no-index C/ repository_database/ || echo "Error: Failed to display subtree changes."
        shell: bash

      # 8. Check for Merge Conflicts before pushing
      - name: Check for Merge Conflicts
        if: env.no_changes == 'false'
        run: |
          echo "Checking for merge conflicts..."
          # 1. 패치 파일 생성: 메인 리포지토리의 C 디렉토리와 repository_database의 내용 간의 차이를 패치 파일로 저장
          git diff --no-index C/ repository_database/ > changes.patch || { echo "Error: Failed to generate patch."; exit 1; }
          
          # 2. 서브트리 리포지토리 클론 (충돌 확인용)
          git clone --branch main --depth 1 https://x-access-token:${{ secrets.TT }}@github.com/TestSubtree/subtreeC.git tmp_subtree || { echo "Error: Failed to clone repository B for conflict check."; exit 1; }
          
          # 3. 패치 적용 시도
          git apply --check ../changes.patch
          if [ $? -ne 0 ]; then
            echo "Merge conflicts detected."
            exit 1
          else
            echo "No merge conflicts detected."
          fi
        shell: bash

      # 9. Push changes to subtreeC if changes exist
      - name: Push changes to subtreeC
        if: env.no_changes == 'false'
        run: |
          echo "Pushing changes to subtreeC..."
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # 현재 PR의 헤드 브랜치 이름을 가져옵니다.
          CURRENT_BRANCH="${{ github.head_ref }}"
          echo "Current branch: $CURRENT_BRANCH"

          # 서브트리 리포지토리에 원격 추가
          git remote add subtreeC https://x-access-token:${{ secrets.TT }}@github.com/TestSubtree/subtreeC.git

          # 현재 브랜치로 푸시
          git subtree push --prefix=C subtreeC "$CURRENT_BRANCH" || { echo "Error: Failed to push changes to subtreeC."; exit 1; }
        shell: bash
